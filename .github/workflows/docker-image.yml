name: Docker Build and Test

on:
  push:
    branches: [ "main", "staging", "dev" ]
  pull_request:
    branches: [ "main", "staging" ]

env:
  IMAGE_NAME: my-app

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: type=docker,dest=/tmp/image.tar
        load: true
        
    - name: Test Docker image
      run: |
        # 加载构建的镜像
        docker load --input /tmp/image.tar
        
        # 测试镜像能否正常启动并执行基本功能
        echo "=== 测试镜像启动 ==="
        docker run --rm ${{ env.IMAGE_NAME }}:latest python --version
        
        echo "=== 测试应用导入 ==="
        docker run --rm ${{ env.IMAGE_NAME }}:latest python -c "from app import app; print('应用导入成功')"
        
        echo "=== 运行应用测试 ==="
        docker run --rm ${{ env.IMAGE_NAME }}:latest python -m pytest tests/ -v
        
    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.IMAGE_NAME }}:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload security scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
